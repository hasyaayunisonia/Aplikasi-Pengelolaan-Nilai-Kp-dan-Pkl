/* eslint-disable no-restricted-globals */
import React, { useState, useEffect } from 'react'
import 'antd/dist/reset.css'
import 'src/scss/_custom.scss'
import { CCard, CCardBody, CCol, CRow } from '@coreui/react'
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'
import { faPlus } from '@fortawesome/free-solid-svg-icons'
import { Button, Col, Row, Table, Tooltip, Spin, Tabs } from 'antd'
import { LoadingOutlined } from '@ant-design/icons'
import { useNavigate } from 'react-router-dom'
import axios from 'axios'

const antIcon = <LoadingOutlined style={{ fontSize: 40 }} spin />

const ListSeminarPerusahaan = () => {
  const [isLoading, setIsLoading] = useState(true)
  const [data, setData] = useState([])
  let history = useNavigate()

  const pesertaSeminar = (id) => {
    history(`/nilaiseminar/penilaianseminar/listpeserta/${id}`)
  }
  useEffect(() => {
    const getData = async () => {
      axios.defaults.withCredentials = false
      await axios
        .get(`/api/seminar/company`)
        .then((res) => {
          setIsLoading(false)
          console.log(res.data, data)
          setData(
            res.data.data.map((row) => ({
              name: row.name,
              id: row.id,
            })),
          )
        })
        .catch(function (error) {
          if (error.toJSON().status >= 300 && error.toJSON().status <= 399) {
            history.push('/dashboard')
          } else if (error.toJSON().status >= 400 && error.toJSON().status <= 499) {
            history.push('/404')
          } else if (error.toJSON().status >= 500 && error.toJSON().status <= 599) {
            history.push('/500')
          }
        })
    }
    getData()
  }, [history])
  // axios.defaults.withCredentials = true

  const columns = [
    {
      title: 'No',
      dataIndex: 'no',
      width: '5%',
      align: 'center',
      render: (value, item, index) => {
        return index + 1
      },
    },
    {
      title: 'Nama Perusahaan',
      dataIndex: 'name',
    },
    {
      title: 'Nama Mahasiswa',
      dataIndex: 'action',
      align: 'center',
      width: '20%',
      render: (text, record) => (
        <>
          <Row>
            <Col span={24} style={{ textAlign: 'center' }}>
              <Button
                id="detail"
                size="small"
                shape="square"
                style={{ color: 'fffff', background: '#00BFFF' }}
                onClick={() => pesertaSeminar(record.id)}
              >
                <FontAwesomeIcon icon={faPlus} style={{ color: 'fffff', align: 'center' }} />
              </Button>
            </Col>
          </Row>
        </>
      ),
    },
  ]

  return isLoading ? (
    <Spin indicator={antIcon} />
  ) : (
    <>
      <CCard className="mb-4">
        <CCardBody>
          <CRow>
            <CCol sm={12}>
              <h6>Daftar Perusahaan</h6>
              <Table scroll={{ x: 'max-content' }} columns={columns} dataSource={data} bordered />
            </CCol>
          </CRow>
        </CCardBody>
      </CCard>
    </>
  )
}
export default ListSeminarPerusahaan
